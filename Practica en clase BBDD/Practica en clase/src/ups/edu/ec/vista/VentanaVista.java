/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ups.edu.ec.vista;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ups.edu.ec.controlador.ProcuradorJpaController;
import ups.edu.ec.modelo.Procurador;

/**
 *
 * @author User
 */
public class VentanaVista extends javax.swing.JInternalFrame {

    private ProcuradorJpaController controladorProcurador;

    /**
     * Creates new form VentanaVista
     */
    public VentanaVista(ProcuradorJpaController controladorProcurador) {
        initComponents();

        this.controladorProcurador = controladorProcurador;

        llenarTablaInicio();
    }

    public void llenarTablaInicio() {

        var procuradores = controladorProcurador.findProcuradorEntities();

        var modelo = (DefaultTableModel) tblInformacion.getModel();

        modelo.setRowCount(0);

        for (Procurador p : procuradores) {

            if (p.getNumeroAsuntoFk() != null) {
                Object[] row = {p.getNumeroAsuntoFk().getCedulaClienteFk().getCedula(),
                    p.getNumeroAsuntoFk().getCedulaClienteFk().getNombre().concat(p.getNumeroAsuntoFk().getCedulaClienteFk().getApellido()),
                    p.getNumeroAsuntoFk().getNumeroExpediente(),
                    p.getNumeroAsuntoFk().getFechaInicio().toString().concat(p.getNumeroAsuntoFk().getFechaFin().toString()),
                    p.getNumeroAsuntoFk().getEstado(), p.getCedula(), p.getNombre().concat(p.getApellido())
                };

                modelo.addRow(row);
            }
        }

        tblInformacion.setModel(modelo);

    }

    public void llenarTabla(List<Procurador> procuradores) {

        var modelo = (DefaultTableModel) tblInformacion.getModel();

        modelo.setRowCount(0);

        for (Procurador p : procuradores) {
            Object[] row = {p.getNumeroAsuntoFk().getCedulaClienteFk().getCedula(),
                p.getNumeroAsuntoFk().getCedulaClienteFk().getNombre().concat(p.getNumeroAsuntoFk().getCedulaClienteFk().getApellido()),
                p.getNumeroAsuntoFk().getNumeroExpediente(),
                p.getNumeroAsuntoFk().getFechaInicio().toString().concat(p.getNumeroAsuntoFk().getFechaFin().toString()),
                p.getNumeroAsuntoFk().getEstado(), p.getCedula(), p.getNombre().concat(p.getApellido())
            };

            modelo.addRow(row);
        }

        tblInformacion.setModel(modelo);

    }

    public void limpiar() {
        llenarTablaInicio();
        txtBusqueda.setText("");
        cbxOpcion.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbxOpcion = new javax.swing.JComboBox<>();
        txtBusqueda = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInformacion = new javax.swing.JTable();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setText("Buscar por:");

        cbxOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccione--", "Cedula cliente", "Numero expediente", "Cedula procurador" }));

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(cbxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(btnBuscar)
                .addGap(45, 45, 45)
                .addComponent(btnCancelar)
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnCancelar))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        tblInformacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula cliente", "Nombres", "Asunto #", "Periodo", "Estado", "Cedula procurador", "Nombres"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInformacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:

        String opcionCBX = (String) cbxOpcion.getSelectedItem();

        if (opcionCBX.equals("--Seleccione--") || txtBusqueda.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Seleccione parametro busqueda", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (opcionCBX.equals("Cedula cliente")) {

            String cedula = txtBusqueda.getText();

            var resultado = controladorProcurador.findCedulaCliente(cedula);

            if (resultado.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se han encontrado registros", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                llenarTabla(resultado);
            }

        } else if (opcionCBX.equals("Numero expediente")) {

            int idAsunto = Integer.valueOf(txtBusqueda.getText());

            var resultado = controladorProcurador.findNumeroAsunto(idAsunto);

            if (resultado.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se han encontrado registros", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                llenarTabla(resultado);
            }

        } else if (opcionCBX.equals("Cedula procurador")) {

            String cedula = txtBusqueda.getText();

            var resultado = controladorProcurador.findListaProcuradorCedula(cedula);

            if (resultado.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No se han encontrado registros", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                llenarTabla(resultado);
            }
        }


    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:

        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:

        llenarTablaInicio();
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<String> cbxOpcion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInformacion;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
