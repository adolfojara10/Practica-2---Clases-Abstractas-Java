/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ups.edu.ec.vista;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import ups.edu.ec.controlador.AsuntoJpaController;
import ups.edu.ec.controlador.ClienteJpaController;
import ups.edu.ec.controlador.ProcuradorJpaController;
import ups.edu.ec.controlador.exceptions.NonexistentEntityException;
import ups.edu.ec.modelo.Asunto;
import ups.edu.ec.modelo.Cliente;
import ups.edu.ec.modelo.Procurador;

/**
 *
 * @author User
 */
public class VentanaAsunto extends javax.swing.JInternalFrame {
    
    private Cliente cliente;
    private AsuntoJpaController controladorAsunto;
    private ClienteJpaController controladorCliente;
    private ProcuradorJpaController controladorProcurador;
    
    private Asunto asunto;
    private VentanaProcurador ventanaProcurador;

    /**
     * Creates new form VentanaAsunto
     */
    public VentanaAsunto(AsuntoJpaController controladorAsunto, ClienteJpaController controladorCliente,
            ProcuradorJpaController controladorProcurador) {
        initComponents();
        
        this.controladorAsunto = controladorAsunto;
        this.controladorCliente = controladorCliente;
        this.controladorProcurador = controladorProcurador;
    }
    
    public Cliente getCliente() {
        return cliente;
    }
    
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }
    
    public VentanaProcurador getVentanaProcurador() {
        return ventanaProcurador;
    }
    
    public void setVentanaProcurador(VentanaProcurador ventanaProcurador) {
        this.ventanaProcurador = ventanaProcurador;
    }
    
    public void limpiar() {
        
        txtNumeroExpediente.setText("");
        txtEstado.setText("");
        txtCedula.setText("");
        dtChooserFechaInicio.setDate(new Date());
        
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnSiguiente.setEnabled(false);
        txtNumeroExpediente.setEnabled(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNumeroExpediente = new javax.swing.JTextField();
        dtChooserFechaInicio = new com.toedter.calendar.JDateChooser();
        dtChooserFechaFin = new com.toedter.calendar.JDateChooser();
        txtEstado = new javax.swing.JTextField();
        txtCedula = new javax.swing.JFormattedTextField();
        btnCrear = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setTitle("Asunto");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setText("Numero expediente");

        jLabel2.setText("Fecha inicio");

        jLabel3.setText("Fecha fin");

        jLabel4.setText("Estado");

        jLabel5.setText("Cedula cliente");

        try {
            txtCedula.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("0#########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSiguiente.setText("Siguiente");
        btnSiguiente.setEnabled(false);
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.setEnabled(false);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dtChooserFechaInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(dtChooserFechaFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNumeroExpediente)
                            .addComponent(txtEstado)
                            .addComponent(txtCedula))
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnCrear)
                        .addGap(29, 29, 29)
                        .addComponent(btnCancelar)
                        .addGap(34, 34, 34)
                        .addComponent(btnActualizar)
                        .addGap(26, 26, 26)
                        .addComponent(btnEliminar)
                        .addGap(32, 32, 32)
                        .addComponent(btnSiguiente)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtNumeroExpediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBuscar))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addComponent(dtChooserFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addComponent(dtChooserFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrear)
                    .addComponent(btnCancelar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar)
                    .addComponent(btnSiguiente))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        // TODO add your handling code here:

        int numeroExpediente = Integer.valueOf(txtNumeroExpediente.getText());
        Date fechaInicio = dtChooserFechaInicio.getDate();
        Date fechaFin = dtChooserFechaFin.getDate();
        String estado = txtEstado.getText();
        String cedulaCliente = txtCedula.getText();
        
        if (numeroExpediente == 0 || fechaInicio.getTime() == 0 || estado.isBlank() || cedulaCliente.isBlank()) {
            JOptionPane.showMessageDialog(this, "Llene todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            
            cliente = controladorCliente.findCliente(cedulaCliente);
            if (cliente != null) {
                asunto = new Asunto(numeroExpediente, fechaInicio, fechaFin, estado);
                asunto.setCedulaClienteFk(cliente);
                
                try {
                    controladorAsunto.create(asunto);
                    /*
                    int opcion = JOptionPane.showConfirmDialog(this, "Asunto creado con exito! ¿Desea escoger un Procurador",
                            "Información", JOptionPane.INFORMATION_MESSAGE);*/
                    
                    JOptionPane.showMessageDialog(this, "Asunto creado", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                    btnSiguiente.setEnabled(true);
                    
                } catch (Exception ex) {
                    Logger.getLogger(VentanaAsunto.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "El asunto ya existe", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Cliente no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }
        

    }//GEN-LAST:event_btnCrearActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:

        if (cliente != null) {
            txtCedula.setText(cliente.getCedula());
        }

    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        if (cliente != null) {
            txtCedula.setText(cliente.getCedula());
        }
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        // TODO add your handling code here:

        ventanaProcurador.setAsunto(asunto);
        ventanaProcurador.setVisible(true);
        limpiar();
        this.hide();

    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:

        int numeroExpediente = Integer.valueOf(txtNumeroExpediente.getText());
        
        asunto = controladorAsunto.findAsunto(numeroExpediente);
        
        if (asunto != null) {
            txtEstado.setText(asunto.getEstado());
            dtChooserFechaInicio.setDate(asunto.getFechaInicio());
            try {
                dtChooserFechaFin.setDate(asunto.getFechaFin());
            } catch (Exception e) {
                e.printStackTrace();
            }
            txtCedula.setText(asunto.getCedulaClienteFk().getCedula());
            
            btnActualizar.setEnabled(true);
            btnEliminar.setEnabled(true);
            btnSiguiente.setEnabled(true);
            txtNumeroExpediente.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Asunto no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:

        int numeroExpediente = Integer.valueOf(txtNumeroExpediente.getText());
        Date fechaInicio = dtChooserFechaInicio.getDate();
        Date fechaFin = dtChooserFechaFin.getDate();
        String estado = txtEstado.getText();
        String cedulaCliente = txtCedula.getText();
        
        if (numeroExpediente == 0 || fechaInicio.getTime() == 0 || estado.isBlank() || cedulaCliente.isBlank()) {
            JOptionPane.showMessageDialog(this, "Llene todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            
            cliente = controladorCliente.findCliente(cedulaCliente);
            if (cliente != null) {
                asunto = new Asunto(numeroExpediente, fechaInicio, fechaFin, estado);
                asunto.setCedulaClienteFk(cliente);
                
                var listaProcuradoresAuxiliar = controladorProcurador.findNumeroAsunto(numeroExpediente);
                
                asunto.setProcuradorCollection(listaProcuradoresAuxiliar);
                
                try {
                    controladorAsunto.edit(asunto);
                    /*
                    int opcion = JOptionPane.showConfirmDialog(this, "Asunto creado con exito! ¿Desea escoger un Procurador",
                            "Información", JOptionPane.INFORMATION_MESSAGE);*/
                    
                    JOptionPane.showMessageDialog(this, "Asunto actualizado", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                    
                } catch (Exception ex) {
                    Logger.getLogger(VentanaAsunto.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "El asunto ya existe", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Cliente no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        int numeroExpediente = Integer.valueOf(txtNumeroExpediente.getText());
        
        try {
            
            var as = controladorAsunto.findAsunto(numeroExpediente);
            
            var procus = controladorProcurador.findNumeroAsunto(numeroExpediente);
            
            as.setProcuradorCollection(procus);
            
            controladorAsunto.edit(as);
            
            controladorAsunto.destroy(numeroExpediente);
            
            JOptionPane.showMessageDialog(this, "Asunto eliminado", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            limpiar();
            
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(VentanaAsunto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(VentanaAsunto.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnSiguiente;
    private com.toedter.calendar.JDateChooser dtChooserFechaFin;
    private com.toedter.calendar.JDateChooser dtChooserFechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JFormattedTextField txtCedula;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtNumeroExpediente;
    // End of variables declaration//GEN-END:variables
}
