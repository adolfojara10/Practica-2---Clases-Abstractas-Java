/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ups.edu.ec.vista;

import java.io.FileNotFoundException;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import ups.edu.ec.controlador.ControladorAdministrador;
import ups.edu.ec.controlador.ControladorMatrimonio;
import ups.edu.ec.controlador.ControladorPersona;
import ups.edu.ec.modelo.Administrador;

/**
 *
 * @author User
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private VentanaLogIn ventanaLogin;
    private VentanaCrearAdministrador ventanaCrearAdministrador;
    private VentanaCrearMatrimonio ventanaCrearMatrimonio;
    private VentanaTestigos ventanaTestigos;
    private VentanaJuez ventanaJuez;
    private VentanaGestionMatrimonio ventanaGestionMatrimonio;
    private VentanaGestionAdministrador ventanaGestionAdministrador;

    private ControladorAdministrador controladorAdministrador;
    private ControladorMatrimonio controladorMatrimonio;
    private ControladorPersona controladorPersona;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() throws FileNotFoundException {
        initComponents();

        controladorAdministrador = new ControladorAdministrador("C:\\Users\\User\\Desktop\\ProgramacionAplicada\\PruebaPractica1\\administradores.obj");
        controladorMatrimonio = new ControladorMatrimonio("C:\\Users\\User\\Desktop\\ProgramacionAplicada\\PruebaPractica1\\matrimonios.obj");
        controladorPersona = new ControladorPersona("C:\\Users\\User\\Desktop\\ProgramacionAplicada\\PruebaPractica1\\personas.obj");

        ventanaLogin = new VentanaLogIn(controladorAdministrador);
        ventanaCrearAdministrador = new VentanaCrearAdministrador(controladorAdministrador);

        ventanaJuez = new VentanaJuez(controladorPersona, controladorMatrimonio);
        ventanaTestigos = new VentanaTestigos(controladorPersona, ventanaJuez);

        ventanaCrearMatrimonio = new VentanaCrearMatrimonio(controladorMatrimonio, controladorPersona,
                ventanaTestigos, ventanaJuez);

        ventanaJuez.setVentanaCrearMatrimonio(ventanaCrearMatrimonio);
        ventanaJuez.setVentanaTestigos(ventanaTestigos);

        ventanaGestionMatrimonio = new VentanaGestionMatrimonio(controladorMatrimonio);
        ventanaGestionAdministrador = new VentanaGestionAdministrador(controladorAdministrador);

        desktopPane.add(ventanaLogin);
        desktopPane.add(ventanaCrearAdministrador);
        desktopPane.add(ventanaCrearMatrimonio);
        desktopPane.add(ventanaTestigos);
        desktopPane.add(ventanaJuez);
        desktopPane.add(ventanaGestionMatrimonio);
        desktopPane.add(ventanaGestionAdministrador);

    }

    public Administrador comprobarAdministrador() {
        Constructor<Administrador> constructor;
        try {
            constructor = Administrador.class.getDeclaredConstructor();
            constructor.setAccessible(true);
            Administrador admin = constructor.newInstance();

            return Administrador.instance;
        } catch (NoSuchMethodException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SecurityException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvocationTargetException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        return null;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        inicioMenu = new javax.swing.JMenu();
        logInmenuItem = new javax.swing.JMenuItem();
        cerrarSesionMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        crearMenu = new javax.swing.JMenu();
        crearAdministradorMenuItem = new javax.swing.JMenuItem();
        crearMatrimonioMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        gestionMatrimonioMenuItem = new javax.swing.JMenuItem();
        gestionAdministradorMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Matrimonio");

        inicioMenu.setMnemonic('f');
        inicioMenu.setText("Inicio");

        logInmenuItem.setMnemonic('o');
        logInmenuItem.setText("Log in");
        logInmenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInmenuItemActionPerformed(evt);
            }
        });
        inicioMenu.add(logInmenuItem);

        cerrarSesionMenuItem.setText("Cerrar sesi√≥n");
        cerrarSesionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionMenuItemActionPerformed(evt);
            }
        });
        inicioMenu.add(cerrarSesionMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        inicioMenu.add(exitMenuItem);

        menuBar.add(inicioMenu);

        crearMenu.setMnemonic('e');
        crearMenu.setText("Crear");

        crearAdministradorMenuItem.setMnemonic('t');
        crearAdministradorMenuItem.setText("Administrador");
        crearAdministradorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearAdministradorMenuItemActionPerformed(evt);
            }
        });
        crearMenu.add(crearAdministradorMenuItem);

        crearMatrimonioMenuItem.setMnemonic('y');
        crearMatrimonioMenuItem.setText("Matrimonio");
        crearMatrimonioMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearMatrimonioMenuItemActionPerformed(evt);
            }
        });
        crearMenu.add(crearMatrimonioMenuItem);

        menuBar.add(crearMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Gestion");

        gestionMatrimonioMenuItem.setMnemonic('c');
        gestionMatrimonioMenuItem.setText("Matrimonio");
        gestionMatrimonioMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gestionMatrimonioMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(gestionMatrimonioMenuItem);

        gestionAdministradorMenuItem.setText("Administrador");
        gestionAdministradorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gestionAdministradorMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(gestionAdministradorMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void logInmenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInmenuItemActionPerformed
        // TODO add your handling code here:
        cerrarVentanas();
        ventanaLogin.setVisible(true);
    }//GEN-LAST:event_logInmenuItemActionPerformed

    private void crearAdministradorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearAdministradorMenuItemActionPerformed

        cerrarVentanas();
        ventanaCrearAdministrador.setVisible(true);

    }//GEN-LAST:event_crearAdministradorMenuItemActionPerformed

    private void crearMatrimonioMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearMatrimonioMenuItemActionPerformed

        if (this.comprobarAdministrador() != null) {
            cerrarVentanas();
            ventanaCrearMatrimonio.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe iniciar sesi√≥n", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_crearMatrimonioMenuItemActionPerformed

    private void cerrarSesionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionMenuItemActionPerformed
        // TODO add your handling code here:
        Administrador.instance = null;

    }//GEN-LAST:event_cerrarSesionMenuItemActionPerformed

    private void gestionMatrimonioMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gestionMatrimonioMenuItemActionPerformed
        // TODO add your handling code here:
        if (this.comprobarAdministrador() != null) {
            cerrarVentanas();
            ventanaGestionMatrimonio.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe iniciar sesi√≥n", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_gestionMatrimonioMenuItemActionPerformed

    private void gestionAdministradorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gestionAdministradorMenuItemActionPerformed
        // TODO add your handling code here:
        if (this.comprobarAdministrador() != null) {
            cerrarVentanas();
            ventanaGestionAdministrador.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Debe iniciar sesi√≥n", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_gestionAdministradorMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new VentanaPrincipal().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void cerrarVentanas() {
        ventanaLogin.hide();
        ventanaCrearAdministrador.hide();
        ventanaCrearMatrimonio.hide();
        ventanaGestionMatrimonio.hide();
        ventanaGestionAdministrador.hide();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem cerrarSesionMenuItem;
    private javax.swing.JMenuItem crearAdministradorMenuItem;
    private javax.swing.JMenuItem crearMatrimonioMenuItem;
    private javax.swing.JMenu crearMenu;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuItem gestionAdministradorMenuItem;
    private javax.swing.JMenuItem gestionMatrimonioMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu inicioMenu;
    private javax.swing.JMenuItem logInmenuItem;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
